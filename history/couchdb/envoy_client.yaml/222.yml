static_resources:
  listeners:
  - name: listen_client
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
    - 
      # Configures a transport socket protocol like TLS or ALTS.
      # To specify a specific type, a "typed_config" field with valid "@type" name is required.
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          # A transport socket listening to downstream connections (clients) using TLS.
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          # TLS contextual information shared by both the client and server.
          common_tls_context:
            # A list of TLS certificates that can be used, clients will only choose a single one per session.
            tls_certificates:
              -
                # A datasource from which to read the public key certificate, such as a file or
                # environment variable.
                certificate_chain:
                  filename: "/etc/envoy/cert.pem"
                # A datasource from which to read the private key, such as a file or environment variable.
                private_key:
                  filename: "/etc/envoy/key.pem"
            alpn_protocols: ["h2,http/1.1"]
      filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          request_id_extension:
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.request_id.uuid.v3.UuidRequestIdConfig
          generate_request_id: true
          tracing:
            provider:
              name: envoy.tracers.opentelemetry
              typed_config:
                "@type": type.googleapis.com/envoy.config.trace.v3.OpenTelemetryConfig
                grpc_service:
                  envoy_grpc:
                    cluster_name: jaeger_stats
                  timeout: 1s
                service_name: envoy_client
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          codec_type: AUTO
          stat_prefix: client_l
          http_protocol_options:
            allow_chunked_length: true
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend_unreliable
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                #return 503 after 12m                
                  timeout: 0s
                  idle_timeout: 0s
                  retry_policy:
                      retry_on: 5xx,refused-stream,connect-failure,gateway-error,reset
                      num_retries: 4
                      per_try_timeout: 180s                
                  cluster: envoy_server
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
  - name: envoy_server
    # type: STATIC
    type: LOGICAL_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: envoy_server
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: envoy-server
                port_value: 18080
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
  - name: jaeger_stats
    connect_timeout: 5s
    type: LOGICAL_DNS
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}
    load_assignment:
      cluster_name: jaeger_stats
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: jaeger
                port_value: 4317
